name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build-apps:
    name: Build Apps
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      NODE_ENV: development
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"
          echo "::set-output name=version::$(yarn -v)"

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            '**/node_modules'
            '**/.eslintcache'
          key: ${{ runner.os }}-yarn-${{ steps.yarn-cache-dir-path.outputs.version }}-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --frozen-lockfile
      - run: yarn build:client
      - run: yarn build:server

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-apps
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_BASE_NAME: ${{ secrets.HEROKU_APP_BASE_NAME }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Production Environment
        if: github.ref == 'refs/heads/master'
        run: echo "HEROKU_ENV=prod" >> $GITHUB_ENV
      - name: Deploy to Heroku
        run: git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_BASE_NAME-${{ env.HEROKU_ENV }}.git $GITHUB_SHA:master
